openapi: 3.0.3
info:
  title: Secure Chat API
  version: 1.0.0
  description: |
    This is a secure chat API.
    You can find out more at [secure-chat-app](https://github.com/Sriram-52/secure-chat).
  license:
    name: MIT
    url: "https://opensource.org/licenses/MIT"
servers:
  - url: "http://localhost:8080"
    description: Local server
paths:
  /register:
    post:
      tags:
        - Authentication
      summary: Register a new user
      description: Register a new user
      operationId: registerUser
      requestBody:
        description: User to register
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "201":
          description: User created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Invalid user supplied
        "409":
          description: User already exists
  /login:
    post:
      tags:
        - Authentication
      summary: Login a user
      description: Login a user
      operationId: loginUser
      requestBody:
        description: User to login
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: User logged in
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Invalid user supplied
        "404":
          description: User not found
  /logout:
    post:
      tags:
        - Authentication
      summary: Logout a user
      description: Logout a user
      operationId: logoutUser
      requestBody:
        description: User to logout
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: User logged out
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Invalid user supplied
        "404":
          description: User not found
  /chat:
    post:
      tags:
        - Chat
      summary: Send a message
      description: Send a message
      operationId: sendMessage
      requestBody:
        description: Message to send
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Message"
      responses:
        "200":
          description: Message sent
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Message"
        "400":
          description: Invalid message supplied
        "404":
          description: User not found
  /chat/{userid}:
    get:
      tags:
        - Chat
      summary: Get messages
      description: Get messages
      operationId: getMessages
      parameters:
        - name: userid
          in: path
          description: userid of the user
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Messages retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Messages"
        "400":
          description: Invalid userid supplied
        "404":
          description: User not found
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          description: ID of the user
        username:
          type: string
          description: Username of the user
        email:
          type: string
          description: Email of the user
        password:
          type: string
          description: Password of the user
      required:
        - username
        - email
    Message:
      type: object
      properties:
        id:
          type: string
          description: ID of the message
        sender:
          type: string
          description: userid of the sender
        receiver:
          type: string
          description: userid of the receiver
        message:
          type: string
          description: Message to send
      required:
        - sender
        - receiver
        - message
    Messages:
      type: array
      items:
        $ref: "#/components/schemas/Message"
